// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asset_amy.DbContext;

#nullable disable

namespace asset_amy.Migrations
{
    [DbContext(typeof(AssetAmyContext))]
    [Migration("20230713105941_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("asset_amy.Models.Asset", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("belongsToId")
                        .HasColumnType("int(11)")
                        .HasColumnName("belongsToId");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<string>("description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("enum('P2P','STOCK','BOND','CRYPTO','REAL_ESTATE','COMMODITY','CASH')")
                        .HasColumnName("type");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updatedAt");

                    b.Property<double>("value")
                        .HasColumnType("double")
                        .HasColumnName("value");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "belongsToId" }, "Asset_belongsToId_fkey");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("asset_amy.Models.Expense", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("belongsToId")
                        .HasColumnType("int(11)")
                        .HasColumnName("belongsToId");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<string>("description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updatedAt");

                    b.Property<double>("value")
                        .HasColumnType("double")
                        .HasColumnName("value");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "belongsToId" }, "Expense_belongsToId_fkey");

                    b.ToTable("Expense", (string)null);
                });

            modelBuilder.Entity("asset_amy.Models.Revenue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("belongsToId")
                        .HasColumnType("int(11)")
                        .HasColumnName("belongsToId");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<string>("description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updatedAt");

                    b.Property<double>("value")
                        .HasColumnType("double")
                        .HasColumnName("value");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "belongsToId" }, "Revenue_belongsToId_fkey");

                    b.ToTable("Revenue", (string)null);
                });

            modelBuilder.Entity("asset_amy.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("activationHash")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("activationHash");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("email");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("firstName");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lastName");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("password");

                    b.Property<string>("passwordResetHash")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("passwordResetHash");

                    b.Property<string>("role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('USER','ADMIN')")
                        .HasColumnName("role")
                        .HasDefaultValueSql("'USER'");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updatedAt");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "User_email_key")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("asset_amy.Models.Asset", b =>
                {
                    b.HasOne("asset_amy.Models.User", "belongsTo")
                        .WithMany("assets")
                        .HasForeignKey("belongsToId")
                        .IsRequired()
                        .HasConstraintName("Asset_belongsToId_fkey");

                    b.Navigation("belongsTo");
                });

            modelBuilder.Entity("asset_amy.Models.Expense", b =>
                {
                    b.HasOne("asset_amy.Models.User", "belongsTo")
                        .WithMany("expenses")
                        .HasForeignKey("belongsToId")
                        .IsRequired()
                        .HasConstraintName("Expense_belongsToId_fkey");

                    b.Navigation("belongsTo");
                });

            modelBuilder.Entity("asset_amy.Models.Revenue", b =>
                {
                    b.HasOne("asset_amy.Models.User", "belongsTo")
                        .WithMany("revenues")
                        .HasForeignKey("belongsToId")
                        .IsRequired()
                        .HasConstraintName("Revenue_belongsToId_fkey");

                    b.Navigation("belongsTo");
                });

            modelBuilder.Entity("asset_amy.Models.User", b =>
                {
                    b.Navigation("assets");

                    b.Navigation("expenses");

                    b.Navigation("revenues");
                });
#pragma warning restore 612, 618
        }
    }
}
